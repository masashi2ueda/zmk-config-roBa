#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 7
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&lt { quick-tap-ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        mybehabior: mybehabior {
            compatible = "zmk,behavior-hold-tap";
            label = "MYBEHABIOR";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&lt 3 Q           &kp W  &kp E               &kp R             &kp T                                            &kp Y            &kp U  &kp I      &kp O    &lt 3 P
&lt 7 A           &kp S  &lt 2 D             &lt 5 F           &kp G        &kp A             &kp MINUS         &kp H            &kp J  &kp K      &lt 2 L  &lt 3 ENTER
&mt LEFT_SHIFT Z  &kp X  &kp C               &kp V             &kp B        &bt BT_SEL 0      &bt BT_SEL 1      &kp N            &kp M  &kp COMMA  &kp DOT  &kp RIGHT_SHIFT
&kp ESCAPE        &to 6  &kp LC(LA(DELETE))  &lt 6 LANGUAGE_1  &lt 4 SPACE  &lt 1 MINUS       &lt 1 LANGUAGE_2  &lt 4 BACKSPACE                             &kp LS(LG(S))
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        symbol {
            bindings = <
&kp EQUAL             &kp PLUS         &kp MINUS         &kp ASTERISK       &kp GRAVE                        &kp LS(TILDE)  &kp LS(AMPS)  &kp LS(CARET)  &kp LS(POUND)  &kp LS(QMARK)
&kp LS(LEFT_BRACE)    &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp AT_SIGN  &trans      &trans  &kp LS(LPAR)   &kp LS(RPAR)  &kp LS(SQT)    &kp SQT        &kp PERCENT
&kp NON_US_BACKSLASH  &kp GRAVE        &kp COLON         &kp SEMICOLON      &kp DOLLAR   &trans      &trans  &kp LS(LT)     &kp LS(GT)    &kp LS(EXCL)   &kp LS(PIPE)   &kp FSLH
&trans                &trans           &trans            &trans             &trans       &trans      &trans  &trans                                                     &trans
            >;
        };

        mynum {
            bindings = <
&kp N0          &kp NUMBER_1  &kp N2  &kp N3  &trans                      &trans    &trans          &kp UP_ARROW    &trans          &trans
&kp LEFT_SHIFT  &kp N4        &kp N5  &kp N6  &kp N0  &trans      &trans  &kp HOME  &kp LEFT_ARROW  &kp MINUS       &kp RIGHT       &kp END
&kp LCTRL       &kp N7        &kp N8  &kp N9  &trans  &trans      &trans  &trans    &trans          &kp DOWN_ARROW  &kp UNDERSCORE  &kp RIGHT_SHIFT
&trans          &trans        &trans  &trans  &trans  &trans      &trans  &trans                                                    &trans
            >;
        };

        myfun {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans   &trans   &trans
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6      &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                            &trans
            >;
        };

        myother {
            bindings = <
&trans   &trans       &trans        &trans    &trans                                  &kp LG(UP_ARROW)  &trans   &trans     &trans          &kp RA(ENTER)
&kp TAB  &kp LS(TAB)  &kp LEFT_ALT  &kp HOME  &kp LG(LEFT_ARROW)  &trans      &trans  &kp LG(RIGHT)     &kp END  &kp MINUS  &kp UNDERSCORE  &kp RS(ENTER)
&trans   &trans       &trans        &trans    &trans              &trans      &trans  &trans            &trans   &trans     &trans          &kp RIGHT_SHIFT
&trans   &trans       &trans        &trans    &trans              &trans      &trans  &trans                                                &trans
            >;
        };

        myctrl {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans     &trans     &kp LC(LS(V))  &kp LC(F)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &kp LC(X)  &kp LC(C)  &kp LC(V)      &kp LC(Z)  &kp LC(S)
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans     &kp LC(A)  &trans         &trans     &kp RC(SLASH)
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                          &trans
            >;
        };

        mymouse {
            bindings = <
&trans     &trans     &trans        &trans  &trans                      &trans  &trans    &trans    &trans     &trans
&lt 7 A    &kp LCTRL  &kp LEFT_ALT  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp RCLK  &kp ENTER
&kp LCTRL  &trans     &trans        &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans     &kp RIGHT_SHIFT
&trans     &to 0      &trans        &trans  &trans  &trans      &trans  &trans                                 &trans
            >;
        };

        myscrol {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                   &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &kp AT_SIGN        &kp HASH        &kp DOLLAR            &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans          &trans                                                                     &kp PIPE
            >;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp F1  &kp F2  &kp F3  &kp HASH  &kp QUESTION
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp SQT   &kp PERCENT
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans  &trans  &trans  &kp PIPE  &kp SLASH
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                            &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        MOUSE {
            bindings = <
&trans               &trans     &trans        &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&lt_to_layer_0 12 A  &kp LCTRL  &kp LEFT_ALT  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &kp ENTER
&trans               &trans     &trans        &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &kp RIGHT_SHIFT
&trans               &tog 0     &trans        &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };
    };
};
